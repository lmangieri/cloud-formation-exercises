AWSTemplateFormatVersion: '2010-09-09'
Description: VPC and subnets como base para ECS cluster
Parameters:
    EnvironmentName:
        Type: String
        Default: ecs-cluster1
        
Mappings:
    SubnetConfig:
        VPC:
            CIDR: '172.31.0.0/16'
        PublicOne:
            CIDR: '172.31.64.0/20'
        PublicTwo:
            CIDR: '172.31.0.0/20'

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            EnableDnsSupport: true
            EnableDnsHostnames: true
            CidrBlock: !FindInMap ['SubnetConfig','VPC','CIDR']
    PublicSubnetOne:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                Fn:Select:
                - 0
                - Fn:GetAZs: {Red: 'AWS::Region'}
            VpcId: !Ref 'VPC'
            CidrBlock: !FindInMap ['SubnetConfig','PublicOne','CIDR']
            MapPublicIpOnLaunch: true
    PublicSubnetTwo:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                Fn:Select:
                - 1
                - Fn:GetAZs: {Red: 'AWS::Region'}
            VpcId: !Ref 'VPC'
            CidrBlock: !FindInMap ['SubnetConfig','PublicOne','CIDR']
            MapPublicIpOnLaunch: true
    InternetGateway:
        Type: AWS::EC2::InternetGateway
    
    GatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref 'VPC'
            InternetGatewayId: !Ref 'InternetGateway'
            
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref 'VPC'
            
    PublicRoute:
        Type: AWS::EC2::Route
        DependsOn: GatewayAttachment
        Properties:
            RouteTableId: !Ref 'PublicRouteTable'
            DestinationCidrBlock: '0.0.0.0/0'
            GatewayId: !Ref 'InternetGateway'
            
    PublicSubnetOneRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnetOne
            RouteTableId: !Ref PublicRouteTable
            
    PublicSubnetTwoRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnetTwo
            RouteTableId: !Ref PublicRouteTable
            
Outputs:
    VpcId:
        Description: The ID of the VPC that this stack is deployed in
        Value: !Ref 'VPC'
        Export:
            Name: !Sub ${EnvironmentName}:VpcId
    PublicSubnetOne:
        Description: Public subnet one
        Value: !Ref 'PublicSubnetOne'
        Export:
            Name: !Sub ${EnvironmentName}:PublicSubnetOne
    PublicSubnetTwo:
        Description: Public subnet two
        Value: !Ref 'PublicSubnetTwo'
        Export:
            Name: !Sub ${EnvironmentName}:PublicSubnetTwo